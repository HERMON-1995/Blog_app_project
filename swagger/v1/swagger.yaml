---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/v1/comments":
    post:
      summary: Creates a comment
      tags:
      - Comments
      parameters: []
      responses:
        '200':
          description: comment created
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                text:
                  type: string
              required:
              - text
  "/api/v1/comments/{id}":
    get:
      summary: Retrieves a comment
      tags:
      - Comments
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: comment found
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  text:
                    type: string
                required:
                - id
                - text
        '404':
          description: comment not found
    put:
      summary: Updates a comment
      tags:
      - Comments
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: comment updated
        '404':
          description: comment not found
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                text:
                  type: string
    delete:
      summary: Deletes a comment
      tags:
      - Comments
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: comment deleted
        '404':
          description: comment not found
  "/api/v1/posts":
    get:
      summary: Retrieves posts for a user
      tags:
      - Posts
      parameters:
      - name: user_id
        in: query
        schema:
          type: integer
      responses:
        '200':
          description: posts found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        title:
                          type: string
                        text:
                          type: string
                      required:
                      - id
                      - title
                      - text
                required:
                - status
                - message
                - data
    post:
      summary: Creates a post
      tags:
      - Posts
      parameters:
      - name: user_id
        in: query
        schema:
          type: integer
      responses:
        '200':
          description: post created
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                text:
                  type: string
              required:
              - title
              - text
  "/api/v1/posts/{id}":
    put:
      summary: Updates a post
      tags:
      - Posts
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: post updated
        '404':
          description: post not found
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                text:
                  type: string
    delete:
      summary: Deletes a post
      tags:
      - Posts
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: post deleted
        '404':
          description: post not found
servers:
- url: https://{defaultHost}
  variables:
    defaultHost:
      default: www.example.com
